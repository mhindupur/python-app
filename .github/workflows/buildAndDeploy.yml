name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change to your deployment branch if different

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      

      - name: Wait before compression
        run: sleep 5  # Adjust time if needed

      - name: Compress build files
        run: tar -czf build.tar.gz .

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deployment runs only if build is successful

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Code to EC2
        run: |
          scp build.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/app/
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app
          tar -xzf build.tar.gz
          source venv/bin/activate || python3 -m venv venv && source venv/bin/activate
          pip install -r requirements.txt
          sudo systemctl restart myapp
          EOF
